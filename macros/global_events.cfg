#define GLOBAL_EVENTS
[lua]
code = <<
	-- we need some things to be at "top" level, escecialy for the wesnoth.game_events.on_load/save in case we need them
	-- and since we have that at toplevel we can put it all here, i think everyting else would just make it more complicated.
	wesnoth.dofile("~add-ons/Scenario_with_robots/lua/main.lua")
	-- wesnoth.dofile("~add-ons/Scenario_with_robots/lua/mp_era.lua")
>>	
[/lua]

[event]
	name=start
#region menu_items
	[set_menu_item]
		description = "edit robot"
		id = "menu_edit_robot"
		[show_if]
			[have_unit]
				x,y=$x1,$y1
				side=$side_number
				ability="robot_ability"
				[not]
					[filter_wml]
						attacks_left=0
					[/filter_wml]
					[and]
						lua_function=has_just_been_recruited_not
					[/and]
				[/not]
			[/have_unit]
		[/show_if]
		[filter_location]
			terrain=C*,C*^*,*^C*,K*,K*^*,*^K*
		[/filter_location]
		[command]
			[lua]
			code= <<
				local args = wesnoth.current.event_context
				robot_mechanics.edit_robot_at_xy(args.x1,args.y1)
				stats.refresh_all_stats_xy(args.x1, args.y1)
			>>
			[/lua]
		[/command]
	[/set_menu_item]
	[set_menu_item]
		description = "buy components"
		id = "menu_open_trader"
		[command]
			[lua]
			code= <<
				-- i want to save the save the items that are alredy bought so i use an "inventory" object for that
				trader_inv_minus = globals.trader_inv_minus or Inventory.new("trader_inv")
				trader_inv_minus.open()

				
				local side = wesnoth.sides[wesnoth.current.side] 
				local item_list = trader.lists["default"]

				for k, v in pairs(trader_inv_minus.get_invenory_set()) do
					item_list[k].quantity = (item_list[k].quantity) and (item_list[k].quantity - v)
				end

				local bought_items, price = trader.buy_items(item_list, side.gold)

				for k, v in pairs(trader_inv_minus.get_invenory_set()) do
					item_list[k].quantity = (item_list[k].quantity) and (item_list[k].quantity + v)
				end
				local inv = inventories[wesnoth.current.side]
				inv.open()
				for k, v in pairs(bought_items) do
					for i = 1, v do
						item_list[k].apply_func(inv)
					end
					trader_inv_minus.add_amount(k, v)

				end

				inv.close()
				trader_inv_minus.close()
				side.gold = side.gold - price
			>>
			[/lua]
		[/command]
	[/set_menu_item]
	[set_menu_item]
		description = "read a book"
		id = "menu_read_book"
		[show_if]
			[have_unit]
				x,y=$x1,$y1
				side=$side_number
				ability="robot_ability"
			[/have_unit]
		[/show_if]
		[command]
			[lua]
			code= <<	
				local book_manual = z_require("book_maual")
				local book_dialog = Gui_test.new(book_manual.pages)
				--this doesn't change the game so no synchronize_choice is needed
				book_dialog.show_dialog()
			>>
			[/lua]
		[/command]
	[/set_menu_item]
#endregion
[/event]
#enddef
